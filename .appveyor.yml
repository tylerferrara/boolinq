version: '3.0.{build}'

branches:
  only:
    - master

clone_folder: c:\projects\boolinq

cache:
- c:\tools\vcpkg\installed\

# Maximum number of concurrent jobs for the project
# NOTE: This depends on your AppVeyor plan.
# The Open-Source (FREE) teir limits to 1 concurrent job
max_jobs: 1

platform:
  # - x86
  # - x64
  - ARM

# Create jobs for each C++ language standard
environment:
  matrix:
  - job_name: C++11
    APPVEYOR_CXX_LANG_STANDARD: 11

  - job_name: C++14
    APPVEYOR_CXX_LANG_STANDARD: 14

  - job_name: C++17
    APPVEYOR_CXX_LANG_STANDARD: 17

  # - job_name: C++20
  #   APPVEYOR_CXX_LANG_STANDARD: 20

configuration:
  - GCC
  - CLANG
  # - MSVC

# Any failure will terminate the build
matrix:
  fast_finish: true
  allow_failures:
    - job_name: C++11

image:
  - Visual Studio 2022

install:
  - cd C:\Tools\vcpkg
  - git pull
  - vcpkg integrate install
  - .\bootstrap-vcpkg.bat
  - cd %APPVEYOR_BUILD_FOLDER%
  - git submodule update --init --recursive

for:
  -
    matrix:
      only:
        - configuration: MSVC
    before_build:
      - set CC=cl
      - set CXX=cl
    build_script:
      - >-
        cmake
        -B build
        -S .
        -DCMAKE_CXX_STANDARD=%APPVEYOR_CXX_LANG_STANDARD%
        -DCMAKE_CXX_EXTENSIONS=OFF
        -DCMAKE_TOOLCHAIN_FILE="c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake"
      - cmake --build build
    test_script:
      - cd build && ctest

  -
    matrix:
      only:
        - configuration: CLANG
    before_build:
      - choco install llvm make
      - cmd: refreshenv
      - set CC=clang
      - set CXX=clang++
    build_script:
      - >-
        cmake
        -B build
        -S . 
        -G "Unix Makefiles"
        -DCMAKE_CXX_STANDARD=%APPVEYOR_CXX_LANG_STANDARD%
        -DCMAKE_CXX_EXTENSIONS=OFF
        -DCMAKE_TOOLCHAIN_FILE="c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake"
        -DCMAKE_CXX_COMPILER="c:/Program Files/LLVM/bin/clang++.exe"
        -DCMAKE_C_COMPILER="c:/Program Files/LLVM/bin/clang.exe"
        -DRUN_HAVE_STD_REGEX=OFF
        -DRUN_HAVE_POSIX_REGEX=OFF
        -DRUN_HAVE_GNU_POSIX_REGEX=OFF
      - cmake --build build
    test_script:
      - cd build && ctest

  -
    matrix:
      only:
        - configuration: GCC
    before_build:
      - choco install winlibs-llvm-free make
      - cmd: refreshenv
      - where gcc
      - set CC=gcc
      - set CXX=gcc
    build_script:
      - >-
        cmake
        -B build
        -S . 
        -G "Unix Makefiles"
        -DCMAKE_CXX_STANDARD=%APPVEYOR_CXX_LANG_STANDARD%
        -DCMAKE_CXX_EXTENSIONS=OFF
        -DCMAKE_TOOLCHAIN_FILE="c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake"
        -DCMAKE_CXX_COMPILER="C:/ProgramData/chocolatey/lib/winlibs-llvm-free/tools/mingw64/bin/gcc.exe"
        -DCMAKE_C_COMPILER="C:/ProgramData/chocolatey/lib/winlibs-llvm-free/tools/mingw64/bin/gcc.exe"
      - cmake --build build
    test_script:
      - cd build && ctest
